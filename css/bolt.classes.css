/* template.classes.css

   Defines base classes and common sub classes, mostly for layout. */


/* .wrap */

.wrap {
	/* Set as position parent */
	position: relative;
	margin: 0 auto;
}

.slides_wrap {
	overflow: hidden;
}


/* .layer */

.layer {
	/* Permit possible scrollbars. */
	overflow: auto;
	
	/* Make layer occupy the whole of the area in its position parent. */
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	
	/* Height and width override the top, right, bottom, left declaration.
	   To use height and width we must change the box model to make sure
	   padding and border do not make the layer bigger than its container.
	   The technique above does not work for iframes and can break as soon
	   as height or width are declared, but the technique below will not
	   work in IE7, where the box model can't be changed. */
	width: 100%;
	height: 100%;
	
	/* Make the corners of layers the same as their parents'. */
	-webkit-border-radius: inherit;
	   -moz-border-radius: inherit;
	        border-radius: inherit;
}

.screen_layer {
	background-color: rgba(0,0,0,0.6);
}

.pushscroll_layer {
	/* A technique for hiding scrollbars by nesting two layers, and pushing
	   the scrollbars on the inner .scroll_layer outside the hidden boundary
	   of the outer .pushscroll_layer. */
	   
	/* These values, representing the thickness of a scrollbar, should be
	   overriden by feature testing with some js */
	padding-right: 16px;
	padding-bottom: 16px;
	
	overflow: hidden;
	width: 100%;
	height: 100%;
	
	/* Make sure we're using the right box model for this technique */
	-webkit-box-sizing: content-box;
	   -moz-box-sizing: content-box;
	    -ms-box-sizing: content-box;
	        box-sizing: content-box;
}

.popup_layer,
.dialog_layer {
	position: fixed;
	
	/* Center inline-block contents horizontally */
	text-align: center;
}

.popup_layer:after,
.dialog_layer:after {
	/* Center inline-block contents vertically */
	display: inline-block;
	content: '';
	height: 100%;
	width: 0;
	vertical-align: middle;
}

.popup_layer > *,
.dialog_layer > * {
	text-align: left;
}

.popup,
.dialog {
	/* Use inline-block to make popup collapse
	   to the width of its contents. */
	display: inline-block;
	
	/* Center the popup vertically, working in tandem
	   with the :after rule of .popup_layer. */
	vertical-align: middle;
	
	/* But let's make sure it doesn't touch the top or
	   bottom. */
	margin-top: 2.5em;
	margin-bottom: 2.5em;
	
	/* Act as position parent */
	position: relative;
	
	padding: 0.8333em;
	margin: 0;
	max-width: 72%;
	
	background-color: white;
	
 	-webkit-border-radius: 0.3333em;
	   -moz-border-radius: 0.3333em;
	        border-radius: 0.3333em;
	
	-webkit-box-shadow: 0 2px 24px rgba(0,0,0,0.6);
	   -moz-box-shadow: 0 2px 24px rgba(0,0,0,0.6);
	        box-shadow: 0 2px 24px rgba(0,0,0,0.6);
}

.popup > img,
.popup > canvas,
.popup > object,
.popup > embed,
.dialog > img,
.dialog > canvas,
.dialog > object,
.dialog > embed {
	max-width: 100%;
	width: auto;
	height: auto;
	display: block;
}

.popup > .close_button,
.dialog > .close_button {
	position: absolute;
	top: -16px;
	top: -1rem;
	right: -16px;
	right: -1rem;
	
	-webkit-box-shadow: 0 0 24px rgba(0,0,0,0.6);
	   -moz-box-shadow: 0 0 24px rgba(0,0,0,0.6);
	        box-shadow: 0 0 24px rgba(0,0,0,0.6);
}


/* TODO: We should be able to merge the .gif technique with
   the <canvas> technique, so that when canvas is not available
   the gif displays - can we set the gif as background to the
   canvas and still expect it to display? */

/* Use a .gif as a loading icon */

/*
.loading_layer {
		display: none;
		background-position: 50% 50%;
		background-image: url('../../images/loading-icon-16-white.gif');
		background-color: transparent;
		background-repeat: no-repeat;
}*/

/* Use a <canvas> as a loading icon */
.loading_layer,
.popup_layer,
.dialog_layer {
	background-image: none;
	background-color: rgba(31, 32, 33, 0.746094);
	z-index: 4;
}

.loading_layer > canvas {
	position: absolute;
	left: 50%;
	top: 50%;
	width: 80px;
	height: 80px;
	margin-left: -40px;
	margin-top: -40px;
}


/* .tip */

.js .tip {
	position: absolute;
	
	padding-top: 0.33em;
	padding-bottom: 0.33em;
	padding-left: 0.75em;
	padding-right: 0.75em;
	max-width: 20em;
	
	margin-top: -3em;
}

@media all and (max-width: 30em) {
	.js .tip {
		/* Override offset given to it by JS when the
		   screen is too small. */
		left: 4% !important;
		margin-left: 0 !important;
		width: 92% !important;
		max-width: 92% !important;
	}
}


/* utilities */

.js .hidden {
	display: none;
}


/* .index
   
   To be applied to <ul>, <ol> and <dl> elements, when you want them to
   be displayed in a non-default style. Defines styles for lists of
   inline-blocks like buttons, thumbs or toolbars, as well as lists
   with dividers. */

.index {
	/* Remove default styling from list items. */
	list-style: none;
	margin: 0;
	padding: 0;
}

.index > li {
	/* Specifically remove default margin and padding from
	   list items in case some typography rules have added
	   these back in after the reset. */
	margin: 0;
	padding: 0;
	
	/* Make index items act as position parents. */
	position: relative;
}

.dropdown_index {
	padding: 0.5em 0;
}

.dropdown_index > li {
	margin-right: 0;
}

.dropdown_index > li > a {
	display: block;
	white-space: nowrap;
	width:100%;
	padding-left:10px;
	padding-right:10px;
	font-size: 0.9167em;
	font-weight: bold;
}

.dots_index {
  text-align: center;
}

.tabs_index > li {
	/* Stop content pushing li wider than it should be */
	overflow: visible;
	margin-right: 0;
}

.two_tabs_index > li	 { width: 50%; }
.three_tabs_index > li { width: 33.33%; }
.four_tabs_index > li	 { width: 25%; }
.five_tabs_index > li	 { width: 20%; }
.six_tabs_index > li	 { width: 16.66%; }
.seven_tabs_index > li { width: 14.28%; }
.eight_tabs_index > li { width: 12.5%; }

.tabs_index > li:last-child		{ margin-right: 0; }
.tabs_index > li.last					{ margin-right: 0; }

.crumbs_index,
.crumbs_index > li {
	white-space: nowrap;
}

.crumbs_index > li + li {
	padding-left: 1.5em;
}

.crumbs_index > li + li:before {
	content: "â–¶";
	font-size: 0.75em;
	display: inline-block;
	display: inline !IE7;
	vertical-align: baseline;
	width: 2em;
	text-align: center;
	margin-left: -2em;
	margin-right: 0;
}

.crumbs_index > li > .button {
	width: 100%;
}

.tabs_index > li > .button,
.crumbs_index > li > .button,
.buttons_index > li > .button,
.thumbs_index > li > .thumb {
	/* Handle lists that contain just a single type of item. If 
	   buttons or thumbs are aligned to the baseline, there will be
	   a gap below them. */
	vertical-align: top;
}

.actions_index {
	/* Send action buttons over to the right */
	text-align: right;
}

/* Items divided by lines */

.divided_index li {
		height: 1em;
		line-height: 1em;
		padding-right: 0.6em;
		margin-right: 0.6em;
		border-right: 1px solid #666666;
}

.divided_index li:last-child {
		padding-right: 0;
		margin-right: 0;
		border-right: 0;
}

.divided_index li.last {
		padding-right: 0;
		margin-right: 0;
		border-right: 0;
}

.divided_index.thumbs li {
		height: auto;
		display: inline-block;
		display: inline !IE7;
}


/* .index classes with horizontal layout.
		
	 Simulate a bunch of blocks pushed against each other horizontally
	 by using inline-block layout to create a horizontal effect. Because
	 they're in the flow, children must have no space between them in
	 the html.
*/

.horizontal,
.tabs_index,
.dots_index,
.crumbs_index,
.actions_index {
	/* To form grids with a horizontal index, line-height
	   needs to be smaller than the items in the index. */
	line-height: 0;
}

.horizontal > *,
.tabs_index > li,
.dots_index > li,
.crumbs_index > li,
.actions_index > li {
	/* For those pour souls who don't understand inline-block (IE7). */
	display: inline-block;
	display: inline !IE7;
	vertical-align: top;
}

.horizontal > *:last-child,
.tabs_index > li:last-child,
.dots_index > li:last-child,
.crumbs_index > li:last-child,
.actions_index > li:last-child {
	margin-right: 0;
}

.horizontal > *.last,
.tabs_index > li.last,
.dots_index > li.last,
.crumbs_index > li.last,
.actions_index > li.last {
	margin-right: 0;
}


.horizontal > input[type='radio'],
.horizontal > input[type='checkbox'] {
	/* Percentage heights on checkboxes can make them dissapear. */
	height: auto;
	width: auto;
	margin-top: 0.25em;
}

.horizontal.index > dt,
.horizontal.index > dd {
	margin: 0;
}
.horizontal.index > dt,
.horizontal.index > dd {
	width: 160px;
	line-height: 1.6em;
}
.horizontal.index > dt {
	vertical-align: text-bottom;
}
.horizontal.index > dd {
	vertical-align: text-top;
	/* reset the margin that usually indents a dd */
	margin-left: 0;
	/* Move it down by one line-height */
	margin-top: 1.6667em;
	/* Move it left with a negative margin accounting for size, padding and margin of dt */
	margin-left: -166px;
	/* Space at the bottom for when the items wrap */
	margin-bottom: 1.6667em;
}


/* .vertical */

.vertical > * {
	display: block;
}

.vertical > *:last-child {
	margin-bottom: 0;
}

.vertical > *.last {
	margin-bottom: 0;
}

.vertical > dt,
.vertical > dd {
	display: inline-block;
	display: inline !IE7;
	vertical-align: top;
	margin: 0;
	padding: 0;
}

.vertical > dt {
	text-align: right;
	/* The golden ratio */
	width: 36.20%;
	margin-right: 2%;
}

.vertical > dd {
	/* The golden ratio */
	width: 61.80%;
	margin-right: 0;
}


/* .divided */

.divided.horizontal > * {
	border-left-width: 1px;
	border-left-style: solid;
	border-left-color: #666666;
}

.divided.horizontal > *:first-child {
	border-left-style: none;
}

.divided.vertical > * {
	border-top-width: 1px;
	border-top-style: solid;
	border-top-color: #666666;
}

.divided.vertical > *:first-child {
	border-top-style: none;
}

/*
.vertical.divided_index li {
		padding-right: 0;
		margin-right: 0;
		border-right: none;
		padding-bottom: 0.6em;
		margin-right: 0.6em;
		border-bottom: 1px solid #666666;
}
.vertical.divided_index li:last-child {
		padding-bottom: 0;
		margin-bottom: 0;
		border-bottom: none;
}
.vertical.divided_index li.last {
		padding-bottom: 0;
		margin-bottom: 0;
		border-bottom: none;
}
.vertical.divided_index.thumbs li {
		display: block;
}

.divided_index dt {
		padding-bottom: 0.2em;
		border-bottom: 1px solid #aaaaaa;
}
.divided_index dd {
		margin-top: 1.9em;
		padding-top: 0.2em;
}*/

/* spaced children */

.horizontal > .spaced {
	margin: 0 1.3333em;
}

.vertical > .spaced {
	margin: 1.3333em 0;
}

/* Putting objects of unknown width/height in the centre */

.central {
	display: -webkit-box;
	display: -moz-box;
	display: -o-box;
	display: -ms-box;
	display: box;

	-webkit-box-align: center;
	-moz-box-align:		center;
	-o-box-align:			center;
	box-align:					center;

	-webkit-box-pack: center;
	-moz-box-pack:		center;
	-o-box-pack:			center;
	box-pack:					center;
	
	/* FF shrinks the width of boxes with display: box;. Lets
	   force it to behave like the others. */
	width: 100%;
}


/* .col */

.col {
	/* This inline-block method produces nice flow, and with a bit of
	   head scratching can be used for liquid columns with fixed gutters,
	   or even mixed fixed and liquid columns, all with arbitrary content
	   order. However, it is a little susceptible to rounding errors, and
	   requires spaceless html. */
	
	position: relative;
	
	/* For those pour souls who don't understand inline-block (IE7). */
	display: inline-block;
	display: inline !IE7;
	vertical-align: top;
	
	/* Stop content pushing column wider than it should be */
	overflow: visible;
	width: 100%;
}

.col > img,
.col > video,
.col > object,
.col > embed {
	/* Don't allow media to break out of column bounds. */
	max-width: 100%;
}

.col_wrap {
  margin-left: -0.8333em;
  margin-right: -0.8333em;
}

.col_wrap > .col {
  padding-left: 0.8333em;
  padding-right: 0.8333em;
  /* Make sure wraps and cols are using the same font-size. */
  font-size: inherit;
}

.col_wrap > .last_col {
	/* A convenient class for when you want to force following columns to wrap. */
	margin-right: 100%;
}


/* We use unicode encodings to allow classes to begin with a number, so for
   example. .\32_col_wrap is the class .2_col_wrap, and .\31 0_col_wrap is
   the class .10_col_wrap. I know, I know. They are not particularly
   readable in CSS, but the way they're used here - as flags - means they
   don't show up in the inspector, and they're very readable in the HTML. */

.\32_col_wrap > .col  { width: 50%; }
.\33_col_wrap > .col  { width: 33.3333%; }
.\34_col_wrap > .col  { width: 25%; }
.\35_col_wrap > .col  { width: 20%; }
.\36_col_wrap > .col  { width: 16.6667%; }
.\37_col_wrap > .col  { width: 14.2857%; }
.\38_col_wrap > .col  { width: 12.5%; }
.\39_col_wrap > .col  { width: 11.1111%; }
.\31 0_col_wrap > .col { width: 10%; }
.\31 1_col_wrap > .col { width: 9.0909%; }
.\31 2_col_wrap > .col { width: 8.3333%; }

.\32_col_wrap > .no1_col      { left: 0;    margin-right: -50%; }
.\32_col_wrap > .no2_col      { left: 100%; margin-right: 0; margin-left: -50%; }

.\32_col_wrap > .span2_col    { width: 100%; margin-right: -100%; }

.\33_col_wrap > .no1_col      { left: 0;        margin-right: -33.3333%; }
.\33_col_wrap > .no2_col      { left: 33.3333%; margin-right: -33.3333%; }
.\33_col_wrap > .no3_col      { left: 100%;     margin-right: 0; margin-left: -33.3333%; }

.\33_col_wrap > .span2_col    { width: 66.6667%; margin-right: -66.6667%; }
.\33_col_wrap > .span3_col    { width: 100%;     margin-right: -100%; }

.\34_col_wrap > .no1_col      { left: 0;    margin-right: -25%; }
.\34_col_wrap > .no2_col      { left: 25%;  margin-right: -25%; }
.\34_col_wrap > .no3_col      { left: 50%;  margin-right: -25%; }
.\34_col_wrap > .no4_col      { left: 100%; margin-right: 0; margin-left: -25%; }

.\34_col_wrap > .span2_col    { width: 50%;  margin-right: -50%; }
.\34_col_wrap > .span3_col    { width: 75%;  margin-right: -75%; }
.\34_col_wrap > .span4_col    { width: 100%; margin-right: -100%; }

.\35_col_wrap > .no1_col      { left: 0;    margin-right: -20%; }
.\35_col_wrap > .no2_col      { left: 20%;  margin-right: -20%; }
.\35_col_wrap > .no3_col      { left: 40%;  margin-right: -20%; }
.\35_col_wrap > .no4_col      { left: 60%;  margin-right: -20%; }
.\35_col_wrap > .no5_col      { left: 100%; margin-right: 0; margin-left: -20%; }

.\35_col_wrap > .span2_col    { width: 40%;  margin-right: -40%; }
.\35_col_wrap > .span3_col    { width: 60%;  margin-right: -60%; }
.\35_col_wrap > .span4_col    { width: 80%;  margin-right: -80%; }
.\35_col_wrap > .span5_col    { width: 100%; margin-right: -100%; }

.\36_col_wrap > .no1_col      { left: 0;        margin-right: -16.6667%; }
.\36_col_wrap > .no2_col      { left: 16.6667%; margin-right: -16.6667%; }
.\36_col_wrap > .no3_col      { left: 33.3333%; margin-right: -16.6667%; }
.\36_col_wrap > .no4_col      { left: 50%;      margin-right: -16.6667%; }
.\36_col_wrap > .no5_col      { left: 66.6667%; margin-right: -16.6667%; }
.\36_col_wrap > .no6_col      { left: 100%;     margin-right: 0; margin-left: -16.6667%; }

.\36_col_wrap > .span2_col    { width: 33.3333%; margin-right: -33.3333%; }
.\36_col_wrap > .span3_col    { width: 50%;      margin-right: -50%; }
.\36_col_wrap > .span4_col    { width: 66.6667%; margin-right: -66.6667%; }
.\36_col_wrap > .span5_col    { width: 83.3333%; margin-right: -83.3333%; }
.\36_col_wrap > .span6_col    { width: 100%;     margin-right: -100%; }

.\37_col_wrap > .no1_col      { left: 0;        margin-right: -14.2857%; }
.\37_col_wrap > .no2_col      { left: 14.2857%; margin-right: -14.2857%; }
.\37_col_wrap > .no3_col      { left: 28.5714%; margin-right: -14.2857%; }
.\37_col_wrap > .no4_col      { left: 42.8571%; margin-right: -14.2857%; }
.\37_col_wrap > .no5_col      { left: 57.1429%; margin-right: -14.2857%; }
.\37_col_wrap > .no6_col      { left: 71.4286%; margin-right: -14.2857%; }
.\37_col_wrap > .no7_col      { left: 100%;     margin-right: 0; margin-left: -14.2857%; }

.\37_col_wrap > .span2_col    { width: 28.5714%; margin-right: -28.5714%; }
.\37_col_wrap > .span3_col    { width: 42.8571%; margin-right: -42.8571%; }
.\37_col_wrap > .span4_col    { width: 57.1429%; margin-right: -57.1429%; }
.\37_col_wrap > .span5_col    { width: 71.4286%; margin-right: -71.4286%; }
.\37_col_wrap > .span6_col    { width: 85.7143%; margin-right: -85.7143%; }
.\37_col_wrap > .span7_col    { width: 100%;     margin-right: -100%; }

.\38_col_wrap > .no1_col      { left: 0;     margin-right: -12.5%; }
.\38_col_wrap > .no2_col      { left: 12.5%; margin-right: -12.5%; }
.\38_col_wrap > .no3_col      { left: 25%;   margin-right: -12.5%; }
.\38_col_wrap > .no4_col      { left: 37.5%; margin-right: -12.5%; }
.\38_col_wrap > .no5_col      { left: 50%;   margin-right: -12.5%; }
.\38_col_wrap > .no6_col      { left: 62.5%; margin-right: -12.5%; }
.\38_col_wrap > .no7_col      { left: 75%;   margin-right: -12.5%; }
.\38_col_wrap > .no8_col      { left: 100%;  margin-right: 0; margin-left: -12.5%; }

.\38_col_wrap > .span2_col    { width: 25%;  margin-right: -25%; }
.\38_col_wrap > .span3_col    { width: 37.5%; margin-right: -37.5%; }
.\38_col_wrap > .span4_col    { width: 50%;  margin-right: -50%; }
.\38_col_wrap > .span5_col    { width: 62.5%; margin-right: -62.5%; }
.\38_col_wrap > .span6_col    { width: 75%;  margin-right: -75%; }
.\38_col_wrap > .span7_col    { width: 87.5%; margin-right: -87.5%; }
.\38_col_wrap > .span8_col    { width: 100%;  margin-right: -100%; }

.\39_col_wrap > .no1_col      { left: 0;        margin-right: -11.1111%; }
.\39_col_wrap > .no2_col      { left: 11.1111%; margin-right: -11.1111%; }
.\39_col_wrap > .no3_col      { left: 22.2222%; margin-right: -11.1111%; }
.\39_col_wrap > .no4_col      { left: 33.3333%; margin-right: -11.1111%; }
.\39_col_wrap > .no5_col      { left: 44.4444%; margin-right: -11.1111%; }
.\39_col_wrap > .no6_col      { left: 55.5556%; margin-right: -11.1111%; }
.\39_col_wrap > .no7_col      { left: 66.6667%; margin-right: -11.1111%; }
.\39_col_wrap > .no8_col      { left: 77.7778%; margin-right: -11.1111%; }
.\39_col_wrap > .no9_col      { left: 100%;     margin-right: 0; margin-left: -11.1111%; }

.\39_col_wrap > .span2_col    { width: 22.2222%; margin-right: -22.2222%; }
.\39_col_wrap > .span3_col    { width: 33.3333%; margin-right: -33.3333%; }
.\39_col_wrap > .span4_col    { width: 44.4444%; margin-right: -44.4444%; }
.\39_col_wrap > .span5_col    { width: 55.5556%; margin-right: -55.5556%; }
.\39_col_wrap > .span6_col    { width: 66.6667%; margin-right: -66.6667%; }
.\39_col_wrap > .span7_col    { width: 77.7778%; margin-right: -77.7778%; }
.\39_col_wrap > .span8_col    { width: 88.8889%; margin-right: -88.8889%; }
.\39_col_wrap > .span9_col    { width: 100%;     margin-right: -100%; }

.\31 0_col_wrap > .no1_col    { left: 0;    margin-right: -10%; }
.\31 0_col_wrap > .no2_col    { left: 10%;  margin-right: -10%; }
.\31 0_col_wrap > .no3_col    { left: 20%;  margin-right: -10%; }
.\31 0_col_wrap > .no4_col    { left: 30%;  margin-right: -10%; }
.\31 0_col_wrap > .no5_col    { left: 40%;  margin-right: -10%; }
.\31 0_col_wrap > .no6_col    { left: 50%;  margin-right: -10%; }
.\31 0_col_wrap > .no7_col    { left: 60%;  margin-right: -10%; }
.\31 0_col_wrap > .no8_col    { left: 70%;  margin-right: -10%; }
.\31 0_col_wrap > .no9_col    { left: 80%;  margin-right: -10%; }
.\31 0_col_wrap > .no10_col   { left: 100%; margin-right: 0; margin-left: -10%; }

.\31 0_col_wrap > .span2_col  { width: 20%;  margin-right: -20%; }
.\31 0_col_wrap > .span3_col  { width: 30%;  margin-right: -30%; }
.\31 0_col_wrap > .span4_col  { width: 40%;  margin-right: -40%; }
.\31 0_col_wrap > .span5_col  { width: 50%;  margin-right: -50%; }
.\31 0_col_wrap > .span6_col  { width: 60%;  margin-right: -60%; }
.\31 0_col_wrap > .span7_col  { width: 70%;  margin-right: -70%; }
.\31 0_col_wrap > .span8_col  { width: 80%;  margin-right: -80%; }
.\31 0_col_wrap > .span9_col  { width: 90%;  margin-right: -90%; }
.\31 0_col_wrap > .span10_col { width: 100%; margin-right: -100%; }

.\31 1_col_wrap > .no1_col    { left: 0;        margin-right: -9.0909%; }
.\31 1_col_wrap > .no2_col    { left: 9.0909%;  margin-right: -9.0909%; }
.\31 1_col_wrap > .no3_col    { left: 18.1818%; margin-right: -9.0909%; }
.\31 1_col_wrap > .no4_col    { left: 27.2727%; margin-right: -9.0909%; }
.\31 1_col_wrap > .no5_col    { left: 36.3636%; margin-right: -9.0909%; }
.\31 1_col_wrap > .no6_col    { left: 45.4545%; margin-right: -9.0909%; }
.\31 1_col_wrap > .no7_col    { left: 54.5454%; margin-right: -9.0909%; }
.\31 1_col_wrap > .no8_col    { left: 63.6363%; margin-right: -9.0909%; }
.\31 1_col_wrap > .no9_col    { left: 72.7272%; margin-right: -9.0909%; }
.\31 1_col_wrap > .no10_col   { left: 81.8181%; margin-right: -9.0909%; }
.\31 1_col_wrap > .no11_col   { left: 100%;     margin-right: 0; margin-left: -9.0909%; }

.\31 1_col_wrap > .span2_col  { width: 18.1818%; margin-right: -18.1818%; }
.\31 1_col_wrap > .span3_col  { width: 27.2727%; margin-right: -27.2727%; }
.\31 1_col_wrap > .span4_col  { width: 36.3636%; margin-right: -36.3636%; }
.\31 1_col_wrap > .span5_col  { width: 45.4545%; margin-right: -45.4545%; }
.\31 1_col_wrap > .span6_col  { width: 54.5454%; margin-right: -54.5454%; }
.\31 1_col_wrap > .span7_col  { width: 63.6363%; margin-right: -63.6363%; }
.\31 1_col_wrap > .span8_col  { width: 72.7272%; margin-right: -72.7272%; }
.\31 1_col_wrap > .span9_col  { width: 81.8181%; margin-right: -81.8181%; }
.\31 1_col_wrap > .span10_col { width: 90.9090%; margin-right: -90.9090%; }
.\31 1_col_wrap > .span11_col { width: 100%;     margin-right: -9.0909%; }

.\31 2_col_wrap > .no1_col    { left: 0;        margin-right: -8.3333%; }
.\31 2_col_wrap > .no2_col    { left: 8.3333%;  margin-right: -8.3333%; }
.\31 2_col_wrap > .no3_col    { left: 16.6667%; margin-right: -8.3333%; }
.\31 2_col_wrap > .no4_col    { left: 25%;      margin-right: -8.3333%; }
.\31 2_col_wrap > .no5_col    { left: 33.3333%; margin-right: -8.3333%; }
.\31 2_col_wrap > .no6_col    { left: 41.6667%; margin-right: -8.3333%; }
.\31 2_col_wrap > .no7_col    { left: 50%;      margin-right: -8.3333%; }
.\31 2_col_wrap > .no8_col    { left: 58.3333%; margin-right: -8.3333%; }
.\31 2_col_wrap > .no9_col    { left: 66.6667%; margin-right: -8.3333%; }
.\31 2_col_wrap > .no10_col   { left: 75%;      margin-right: -8.3333%; }
.\31 2_col_wrap > .no11_col   { left: 83.3333%; margin-right: -8.3333%; }
.\31 2_col_wrap > .no12_col   { left: 100%;     margin-right: 0; margin-left: -8.3333%; }

.\31 2_col_wrap > .span2_col  { width: 16.6667%; margin-right: -16.6667%; }
.\31 2_col_wrap > .span3_col  { width: 25%;      margin-right: -25%; }
.\31 2_col_wrap > .span4_col  { width: 33.3333%; margin-right: -33.3333%; }
.\31 2_col_wrap > .span5_col  { width: 41.6667%; margin-right: -41.6667%; }
.\31 2_col_wrap > .span6_col  { width: 50%;      margin-right: -50%; }
.\31 2_col_wrap > .span7_col  { width: 58.3333%; margin-right: -58.3333%; }
.\31 2_col_wrap > .span8_col  { width: 66.6667%; margin-right: -66.6667%; }
.\31 2_col_wrap > .span9_col  { width: 75%;      margin-right: -75%; }
.\31 2_col_wrap > .span10_col { width: 83.3333%; margin-right: -83.3333%; }
.\31 2_col_wrap > .span11_col { width: 91.6667%; margin-right: -91.6667%; }
.\31 2_col_wrap > .span12_col { width: 100%;     margin-right: -8.3333%; }


/* .pane */

.pane {
  position: relative;
}


/* .content */

.content {
	/* Content class is used where typography needs to be redefined
	   for, say, a region of the page that has html that comes from
	   a CMS, or some other user generated content. */
	position: relative;
}


.tab,
.slide {
	display: inline-block;
	vertical-align: top;
	position: relative;
	width: 100%;
	margin-right: -100%;
}

/* Show/hide transitions. */

.js .tab,
.js .popup_layer,
.js .dialog_layer,
.js .loading_layer,
.js .tip {
	visibility: hidden;
	opacity: 0;
	z-index: 1;
	
	-webkit-transition-property: opacity, visibility;
	   -moz-transition-property: opacity, visibility;
	    -ms-transition-property: opacity, visibility;
	     -o-transition-property: opacity, visibility;
	        transition-property: opacity, visibility;

	-webkit-transition-duration: 120ms;
	   -moz-transition-duration: 120ms;
	    -ms-transition-duration: 120ms;
	     -o-transition-duration: 120ms;
	        transition-duration: 120ms;

	-webkit-transition-timing-function: ease-in;
	   -moz-transition-timing-function: ease-in;
	    -ms-transition-timing-function: ease-in;
	     -o-transition-timing-function: ease-in;
	        transition-timing-function: ease-in;
}

.js .tab.active,
.js .popup_layer.active,
.js .dialog_layer.active,
.js .loading .loading_layer,
.js .tip.active {
	/* The inline-block technique overlays tabs on top of one another
	   but still allows the height of the blocks to stay in the flow.
	   It's better than using position: absolute. It rocks. */
	
	visibility: visible;
	opacity: 1;
	z-index: 2;
	
	-webkit-transition-timing-function: ease-out;
	   -moz-transition-timing-function: ease-out;
	    -ms-transition-timing-function: ease-out;
	     -o-transition-timing-function: ease-out;
	        transition-timing-function: ease-out;
}

.js .tip.active {
	-webkit-transition-delay: 540ms;
	   -moz-transition-delay: 540ms;
	    -ms-transition-delay: 540ms;
	        transition-delay: 540ms;
}



.js .slide {
	/* By default all slides are positioned off to the left. */ 
	left: -100%;
	
	/* Slides have no height by default to stop them influencing
	   scrollbars when they are not active. */
	height: 0;
	overflow: hidden;
	z-index: 1;
	
	-webkit-transition-property: left, height;
	   -moz-transition-property: left, height;
	    -ms-transition-property: left, height;
	     -o-transition-property: left, height;
	        transition-property: left, height;

	-webkit-transition-duration: 333ms;
	   -moz-transition-duration: 333ms;
	    -ms-transition-duration: 333ms;
	     -o-transition-duration: 333ms;
	        transition-duration: 333ms;
	
	-webkit-transition-timing-function: cubic-bezier(0.1, 0.7, 0.7, 1);
	   -moz-transition-timing-function: cubic-bezier(0.1, 0.7, 0.7, 1);
	    -ms-transition-timing-function: cubic-bezier(0.1, 0.7, 0.7, 1);
	     -o-transition-timing-function: cubic-bezier(0.1, 0.7, 0.7, 1);
	        transition-timing-function: cubic-bezier(0.1, 0.7, 0.7, 1);
	
	/* A nice bit of hardware acceleration may help the transitions. */
	-webkit-transform: translate3d(0,0,0);
	   -moz-transform: translate3d(0,0,0);
	    -ms-transform: translate3d(0,0,0);
	     -o-transform: translate3d(0,0,0);
	        transform: translate3d(0,0,0);
}

.js .slide.active {
	/* The .active slide is positioned in the centre. */
	left: 0;
	height: auto;
	overflow: visible;
	z-index: 2;
}

.js .slide.active ~ .slide {
	/* All slides after the .active slide are positioned off to
	   the right. */
	left: 100%;
}

.js .slide.active ~ .slide.active {
	/* Except, of course, any that are still active. */
	left: 0;
}

.js .stacked_slide {
	left: 0;
}


/* .popup, .popdown, .dropdown */

.popdown,
.dropdown {
	display: block;
	/* Hiding overflow causes problems in IE7 when the dropdown's container
	   is narrower than the dropdown's content. I'm not sure we have any real
	   reason to hide it. Probably if you're animating height to reveal you
	   want this. */
	/*overflow: hidden;*/
	
	position: absolute;
	top: 2em;
	opacity: 0;
	visibility: hidden;
	
	-webkit-transition-property: opacity, top, visibility;
	   -moz-transition-property: opacity, top, visibility;
	    -ms-transition-property: opacity, top, visibility;
	     -o-transition-property: opacity, top, visibility;
	        transition-property: opacity, top, visibility;

	-webkit-transition-duration: 180ms;
	   -moz-transition-duration: 180ms;
	    -ms-transition-duration: 180ms;
	     -o-transition-duration: 180ms;
	        transition-duration: 180ms;

	-webkit-transition-timing-function: ease-out;
	   -moz-transition-timing-function: ease-out;
	    -ms-transition-timing-function: ease-out;
	     -o-transition-timing-function: ease-out;
	        transition-timing-function: ease-out;
}

.popdown.active,
.dropdown.active {
	top: 2.3333em;
	opacity: 1;
	visibility: visible;
	
	-webkit-transition-duration: 60ms;
	   -moz-transition-duration: 60ms;
	    -ms-transition-duration: 60ms;
	     -o-transition-duration: 60ms;
	        transition-duration: 60ms;

	-webkit-transition-timing-function: ease-in;
	   -moz-transition-timing-function: ease-in;
	    -ms-transition-timing-function: ease-in;
	     -o-transition-timing-function: ease-in;
	        transition-timing-function: ease-in;
}


/* button and .button */

button {
	/* buttons have standard padding that needs to be avoided. */
	padding-top: 0;
	padding-bottom: 0;
	/* And they don't automatically inherit font styles. */
	font-size: inherit;
	font-family: inherit;
}

.button:hover,
.button:focus {
	/* If button is link, it may have hover styles. */
	text-decoration: none;
}

button,
.button {
	display: inline-block;
	position: relative;
	
	cursor: pointer;
	
	width: auto;
	height: 2em;
	/* button elements ignore line-height, centering text automaticaly. */
	line-height: 2em;
	padding-left: 0.75em;
	padding-right: 0.75em;
	vertical-align: baseline;
	
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	text-align: center;
	text-decoration: none;
	
	background-repeat: no-repeat;
	border-width: 0;

	-webkit-background-clip: padding-box;
	   -moz-background-clip: padding-box;
	    -ms-background-clip: padding-box;
	     -o-background-clip: padding-box;
	        background-clip: padding-box;

	-webkit-background-origin: padding-box;
	   -moz-background-origin: padding;
	   -moz-background-origin: padding-box;
	    -ms-background-origin: padding-box;
	     -o-background-origin: padding-box;
	        background-origin: padding-box;
}

button:hover,
.button:hover {
	color: rgb(63,63,63);
}

button.loading,
button.disabled,
.button.loading,
.button.disabled {
	opacity: 0.4;
}

.button input {
	display: inline;
	height: auto;
	vertical-align: baseline;
	margin-left: 0.5em;
	margin-right: 0.5em;
}

.dot_button {
	padding-left: 4px;
	padding-left: 0.25rem;
	padding-right: 4px;
	padding-right: 0.25rem;
	
	font-size: 24px;
	font-size: 1.5rem;
	line-height: 1em;
	
	opacity: 0.6;
	color: #484848;
}

.dot_button.active {
	opacity: 1;
}

.menu_button,
.tab_button {
	width: 100%;
	padding-left: 0.8333em;
	padding-right: 0.8333em;
	
	/* Remove default border and shadow */
	
	-webkit-box-shadow: none;
	   -moz-box-shadow: none;
	        box-shadow: none;
	
	-webkit-border-radius: 0;
	   -moz-border-radius: 0;
	        border-radius: 0;
}

.menu_button {
	text-align: left;
}

.close_button {
	width: 32px;
	width: 2rem;
	height: 0;
	padding-top: 28px;
	padding-top: 1.75rem;

	color: white;
	background: #444444;
	border: 2px solid white;

	-webkit-border-radius: 1rem;
	   -moz-border-radius: 1rem;
	        border-radius: 1rem;
}

.close_button:hover {
	color: white;
}

.close_button:after {
	content: 'âœ–';
	display: block;
	position: absolute;
	font-size: 18px;
	font-size: 1.125rem;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	text-align: center;
	line-height: 28px;
	line-height: 1.75rem;
}

.select_button {
	padding-right: 2.25em;
	text-align: left;
}

.select_button:after {
  content: 'â–¼';
  display: block;
  position: absolute;
  font-size: inherit;
  line-height: inherit;
  top: 0;
  right: 0.5em;
  opacity: 0.25;
}

/* .thumb */

.thumb {
	display: inline-block;
	vertical-align: baseline;
	overflow: hidden;
	
	/* Hide overflowing text. This technique is better
	   than using -ve text-indent because IE7 moves
	   the background image with the text-indent. */
	padding-top: 64px;
	height: 0;
	width: 64px;
	
	-webkit-background-size: cover;
		 -moz-background-size: cover;
	     -o-background-size: cover;
					background-size: cover;

	background-position: 0 0;
	background-repeat: no-repeat;
	
	text-decoration: none;
	color: inherit;
}

.banner_thumb {
	display: block;
	width: auto;
}

.text_thumb,
.text_thumbs .thumb {
	/* Make the text show below the thumb. Text appears
		 outside of the box - ie, it overflows - so that
		 we dont see any more of the image than necessary. */
	overflow: visible;
	white-space: nowrap;
	text-align: center;
	margin-bottom: 1em;
	line-height: 2.3333em;
	
	font-size: 0.9167em;
	font-weight: bold;
	color: rgb(100,100,100);
}

.text_thumb > span {
	/* We can't use text-overflow because overflow is
	   visible, so if you want to truncate the text you
	   need to put a span inside the thumb. */
	overflow: hidden;
	display: block;
	text-align: center;
	white-space: nowrap;
	-ms-text-overflow: ellipsis;
	 -o-text-overflow: ellipsis;
			text-overflow: ellipsis;
}

.browser_thumb {
	width: 64px;
	padding-top: 64px;
	height: 2em;
	line-height: 2em;
	font-size: 0.8333em;
	overflow: visible;
	text-align: center;
	font-weight: bold;
	background-repeat: no-repeat;
	background-size: auto;
	white-space: nowrap;
	
	background-image: url('../images/thumbs/browser_logos.png');
	-moz-background-size: 342px 64px;
	     background-size: 342px 64px;
}

.chrome_browser_thumb		{ background-position: -5px 0; }
.firefox_browser_thumb	{ background-position: -75px 0; }
.opera_browser_thumb		{ background-position: -140px 0; }
.safari_browser_thumb		{ background-position: -205px 0; }
.ie_browser_thumb				{ background-position: -272px 0; }

.chromeframe_browser_thumb {
	background-image: url('/images/thumbs/logo_chromeframe.gif');
	background-position: 0 0;
	
	-moz-background-size: 64px 64px;
			 background-size: 64px 64px;
}

.fb_thumb,
.tw_thumb,
.yt_thumb {
	padding-top: 20px;
	width: 20px;
	overflow: hidden;
	background-image: url('../images/thumbs/logos_social.png');
}

.fb_thumb { background-position: 0 0; }
.tw_thumb { background-position: -25px 0; }
.yt_thumb { background-position: -49px 0; }

/* .card */

.card {
	display: block;
	min-height: 84px;
	
	padding-top:		10px; 
	padding-right:	10px;
	padding-bottom: 0;
	padding-left:		84px;
	
	background-repeat: no-repeat;
	background-color: rgb(200,200,200);
	
	/* Act as position parent */
	position: relative;
	
	-webkit-user-drag: element;
}

.card .thumb {
	position: absolute;
	top: 0.8333em;
	left: 0.8333em;
}

.card a,
.card img {
	-webkit-user-drag: none;
}

.card .card_title {
	font-weight: bold;
	font-size: 1.08333em;
	line-height: 1;
	height: 1.1em;
	margin-bottom: 0.25em;
	
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

.card ul.meta_index {
	-webkit-column-count: 2;
		 -webkit-column-gap: 2px;
		 -moz-column-count: 2;
				-moz-column-gap: 2px;
					 column-count: 2;
						 column-gap: 2px;
}

.card .meta_index>li {
	font-size: 0.9167em;
	height: 1em;
	line-height: 1em;
	margin-right: 0em;
	margin-bottom: 0.5em;
}

.card .meta_index a:hover,
.card .meta_index a:focus {
	text-decoration: none;
}

.card_buttons_index {
	position: absolute;
	bottom: 0.8333em;
	right: 0.8333em;
}

.card_buttons_index > li {
	margin-bottom: 0;
}

/* hcard microformat (for reference)
	 http://microformats.org/wiki/hcard
*/

/*.vcard
	
	/* name - use .url for anything that is a link to this person's	 */
/*	.fn.n
/*		.nickname
/*		.given-name
/*		.additional-name
/*		.family-name
	
	/* name organisation - if the hcard is for an organisation .fn should also be set */
/*	.org
/*		.organization-name
/*		.organization-unit
	
	/* email (usually a link) */
/*	.email
/*		.type /* home, office, work, blah, blah */
	
/*	.photo
	
	/* address */
/*	.adr
/*		.street-address
/*		.locality
/*		.region
/*		.postal-code
/*		.country-name
	
/*	.tel
/*		.type /* home, work, etc. */

	/* use url for display of addresses of resources about this person - including instant messenger */
/*	.url */


/* State classes:
   
     .loading			 - State of items requested from a server
     .active			 - Implies polar (on/off) state
     .current			 - Current implies that one out of a number of items is the current one
     .default			 - Contains a pre-defined value
     .error				 - Used in forms to style children differently when input has errors
     .xxx_state		 - Implies multipolar (0/1/2/...) state
     .xxx_view		 - Applied to the body to control application views
     .xxx_support	 - Applied to the documentElement to flag CSS support
   
   State classes must never have style applied directly, they are here to indicate state only.
   You can style specific nodes that happen to have state, or children of state nodes (for
   instance, showing / hiding a .loading_icon when its parent has .loading), but the state
   class itself must not have style applied. */


/* table */

/* Orientate a table vertically, so that the <tr>s appear as columns, and
   <td>s appear on new rows. Use with caution. */

.v_table thead,
.v_table tbody,
.v_table tr {
	display: inline-block;
	display: inline !IE7;
}

.v_table {
	width: auto;
}

.v_table td {
	display: block;
}

/* Stripes tables and indexes. */

.striped_index > li:nth-child(even),
.striped_table > tbody > tr:nth-child(odd) > td,
.striped_table > tbody > tr:nth-child(odd) > th {
	background-color: rgba(15,15,15,0.08);
}

.striped_index > li,
.striped_table > thead > tr > td,
.striped_table > thead > tr > th,
.striped_table > tbody > tr > td,
.striped_table > tbody > tr > th {
	background-color: rgba(240,240,240,0.1);
}

.striped_table > tbody > tr:hover > td,
.striped_table > tbody > tr:hover > th {
	background-color: rgba(15,15,15,0.15);
}


/* Utilities */

.notransition,
.notransition .slide,
.notransition .tab,
.notransition .popdown,
.notransition .dropdown,
.notransition .layer,
.notransition .tip {
	/* Potential source of bugs: -moz- must have units even with a 0 value,
	   or it doesn't read the rule. */
	-webkit-transition-duration: 0 !important;
	   -moz-transition-duration: 0ms !important;
	    -ms-transition-duration: 0 !important;
	        transition-duration: 0 !important;

	-webkit-transition-delay: 0 !important;
	   -moz-transition-delay: 0ms !important;
	    -ms-transition-delay: 0 !important;
	        transition-delay: 0 !important;
}

.clear:after {
	visibility: hidden;
	display: block;
	font-size: 0;
	content: " ";
	clear: both;
	height: 0;
}

.tl, .tr, .bl, .br { position: absolute; }
.tl, .tr { top: 0; }
.bl, .br { bottom: 0; }
.tl, .bl { left: 0; }
.tr, .br { right: 0; }

.left { float: left; }
.right { float: right; }

.scroll {
	overflow: auto;
	/* Enable momentum scrolling. Unfortunately this is buggy. It doesn't
	   update the custom scrollbar during the momentum ease-out. Also, some
	   children get rendered improperly. Don't use. */
	/*-webkit-overflow-scrolling: touch;*/
}

.scroll::-webkit-scrollbar {
	/* Force scrollbars to display in mobile WebKit devices. For a demo
	   of scrollbar configurations:
	   http://trac.webkit.org/export/41842/trunk/LayoutTests/scrollbars/overflow-scrollbar-combinations.html
	*/
	width: 9px;
	height: 9px;
	background-color: transparent;
	-webkit-border-radius: 12px;
	        border-radius: 12px;
}

.scroll::-webkit-scrollbar-thumb:vertical,
.scroll::-webkit-scrollbar-thumb:horizontal {
	/* Approximate the style of the iPad's default scrollbars. (Can
	   probably do better, but this is quick). */
	background-color: #888888;
	border: 2px solid white;
	
	-webkit-border-radius: 12px;
	        border-radius: 12px;
}

.scroll::-webkit-scrollbar-thumb:vertical {
	min-height: 20px;
}

.scroll::-webkit-scrollbar-thumb:horizontal {
	min-width: 20px;
}

.scroll::-webkit-scrollbar-track-piece:disabled,
.scroll::-webkit-scrollbar-button:disabled {
	display: none !important;
}

.x_scroll {
	overflow-y: hidden;
}

.y_scroll {
	overflow-x: hidden;
}

.x_scroll.y_scroll {
	overflow: scroll;
}

.no_scroll {
	overflow: hidden;
}
